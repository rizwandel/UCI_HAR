install.packages("dplyr")
library(dplyr)
####### Get Data #######

# download zip file
zip_url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
zip_file <- "UCI_HAR_Data.zip"

if(!file.exists(zip_file)){download.file(zip_url, zip_file, mode = 'wb')}

# unzipping zip file containing if data directory doesnot exists
data_path <- "UCI_HAR_Data"
if(!file.exists(data_path)){unzip(zip_file)}

###### Read Data #########

# read training data

trainingSubjects <- read.table(file.path(data_path), "train", "subject_train.txt")
trainingValues <- read.table(file.path(data_path), "train", "X_train.txt")
trainingActivity <- read.table(file.path(data_path), "train", "y_train.txt")

# read test data

testSubjects <- read.table(file.path(data_path), "test", "subject_test.txt")
testValues <- read.table(file.path(data_path), "test", "X_test.txt")
testActivity <- read.table(file.path(data_path), "test", "y_test.txt")

# read features

features <- read.table(file.path(data_path, "features.txt"), as.is = TRUE)

# read activity labels

activities <- read.table(file.path(data_path, "activity_labels.txt"))
colnames(activities) <- c("activityId", "activityLabel")

### Merge Training and Test data sets into one data set ###

# concatenate

humanActivity <- rbind(cbind(trainingSubjects, traingValues, traingActivity),cbind(testSubjects, testValues, testActivity))

# Remove individual data tables to save memory

rm(traingSubjects,traingValues,traingActivity, testSubjects, testValues, testActivity)

# Assign column names

colnames(humanActivity) <- c("subject", features[,2],"activity")

### Extract only values containing mean and std from the humanActivity ###

columnstokeep <- grepl("subject| activity | mean | std", colnames(humanActivity))

humanActivity <- humanActivity[,columnstokeep]

# Use descriptive names

# Replace activity values with named factor levels

humanActivity$activity <- factor(humanActivity$activity, 
                                 levels = activities[, 1], labels = activities[, 2])

# Label the data set with descriptive variable names

# get column names
humanActivityCols <- colnames(humanActivity)

# remove special characters
humanActivityCols <- gsub("[\\(\\)-]", "", humanActivityCols)

# expand abbreviations and clean up names
humanActivityCols <- gsub("^f", "frequencyDomain", humanActivityCols)
humanActivityCols <- gsub("^t", "timeDomain", humanActivityCols)
humanActivityCols <- gsub("Acc", "Accelerometer", humanActivityCols)
humanActivityCols <- gsub("Gyro", "Gyroscope", humanActivityCols)
humanActivityCols <- gsub("Mag", "Magnitude", humanActivityCols)
humanActivityCols <- gsub("Freq", "Frequency", humanActivityCols)
humanActivityCols <- gsub("mean", "Mean", humanActivityCols)
humanActivityCols <- gsub("std", "StandardDeviation", humanActivityCols)

# correct typo
humanActivityCols <- gsub("BodyBody", "Body", humanActivityCols)

# use new labels as column names
colnames(humanActivity) <- humanActivityCols

# Create an independent tidy set with the average of each variable for each activity and each subject

# group by subject and activity and summarise using mean

humanActivityMeans <- humanActivity %>% 
        group_by(subject, activity) %>%
        summarise_each(funs(mean))

# output to file "tidy_data.txt"

write.table(humanActivityMeans, "tidy_data.txt", row.names = FALSE, quote = FALSE)

